{
	"info": {
		"_postman_id": "4dcc92e1-9c55-4d0f-86f7-a10cf8d2e706",
		"name": "web-client",
		"description": "A collection to test [the project](https://github.com/moevm/nosql2h21-real-estate) API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Creating user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cookie token is present\", function () {",
									"    pm.response.to.have.header(\"accessToken\");",
									"    pm.response.not.to.have.header(\"accessToken\", \"\");",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    pm.expect(tv4.validate(pm.response.json(), {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"email\": { \"const\": \"other.user@site.com\" },",
									"            \"firstName\": { \"const\": \"User\" },",
									"            \"lastName\": { \"const\": \"Other\" }",
									"        },",
									"        \"additionalProperties\": true,",
									"        \"required\": [\"email\", \"firstName\", \"lastName\"]",
									"    })).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"other.user@site.com\",\n    \"password\": \"09876\",\n    \"firstName\": \"User\",\n    \"lastName\": \"Other\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"signup"
							]
						},
						"description": "Creating sample user"
					},
					"response": []
				},
				{
					"name": "Logging user out",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "Logging sample user out"
					},
					"response": []
				},
				{
					"name": "Logging user in",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "Logging sample user in"
					},
					"response": []
				},
				{
					"name": "Editing user",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "Editing sample user"
					},
					"response": []
				},
				{
					"name": "Getting user",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "Getting sample user"
					},
					"response": []
				},
				{
					"name": "Deleting user",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "Deleting sample user"
					},
					"response": []
				}
			],
			"description": "Current user and authentication related requests"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "accessToken",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if (!pm.collectionVariables.get(\"token\")) {",
					"    pm.sendRequest({",
					"        url: \"http://localhost:3000/api/auth/signup\",",
					"        method: 'POST',",
					"        header: {",
					"            'content-type': 'application/json'",
					"        },",
					"        body: {",
					"            mode: 'raw',",
					"            raw: JSON.stringify({",
					"                email: \"test.user@site.com\",",
					"                password: \"12345\",",
					"                firstName: \"User\",",
					"                lastName: \"Test\"",
					"            })",
					"        }",
					"    }, (err, response) => {",
					"        pm.cookies.jar().get(\"accessToken\", \"http://localhost:3000/api/auth/signup\", (err, cookie) => {",
					"            pm.collectionVariables.set(\"token\", cookie);",
					"        });",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}